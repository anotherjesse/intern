#!/usr/bin/env python

import json
import os
import sys
import time
import yaml

import intern.cloud
import intern.cluster


def find_config(path):
    """find a intern.yml conf file by going up parent dirs"""
    path = os.path.abspath(path)
    fn = os.path.join(path, 'intern.yml')
    if os.path.exists(fn):
        return fn
    parent = os.path.abspath(os.path.join(path, '..'))
    if parent == path:
        raise Exception('unable to find intern.yml in path')
    return find_config(parent)


if __name__ == '__main__':
    if len(sys.argv) < 2:
        print 'usage: ansible-playbook -i %s (playbook)' % sys.argv[0]
        sys.exit(1)

    # find and load config
    conf_file = os.environ.get('ANSIBLE')
    if conf_file is None:
        conf_file = find_config(os.getcwd())
    config = yaml.load(open(conf_file))

    cluster = intern.cluster.Cluster(config['name'])
    cmd = sys.argv[1]
    if cmd == '--list':
        if not os.environ.get('ANSIBLE_NO_BUILD'):
            # FIXME(ja): optimize this by sending wait_for_ssh option
            # to build, and only waiting for ssh on the new vms...
            if cluster.build(config['spec']):
                cluster.wait_for_ssh()
        groups = {}
        for vm in cluster:
            for g in vm['groups'].split(','):
                if g not in groups:
                    groups[g] = []
                groups[g].append(vm.ip)
        print json.dumps(groups)
    elif cmd == '--host':
        ip = sys.argv[2]
        for vm in cluster:
            if vm.ip == ip:
                print json.dumps({
                        'os:ip': vm.ip,
                        'os:name': vm.name
                    })
                sys.exit(0)
